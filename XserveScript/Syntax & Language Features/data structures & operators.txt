Standard Structures:
********************

Integer -
   Description:
    The Integer data structure is used for storing whole numbers. If no prefix is given, the integer is read as a decimal number.

   Constructor:
    BuiltIn::int(<data>, base=<base>)

   Syntax:
    0123456789 -
      Used to represent decimal integers

    0x0123456789ABCDEF -
      Represents a hexadecimal integer. Valid number range is 0 to 9 and A to F. Letters are not case sensitive, meaning
      a to f = A to F.

    0b10 -
      Represents a binary integer. Valid number range is 0 to 1.

    0o01234567 -
      Represents an octal integer. Valid number range is 0 to 7.

    0n/<base>/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHUJKLMNOPQRSTUVWXYZ -
      Represents an integer with a user-defined base. The base has to be written as decimal integer. The highest conventional
      base is 36. If the base is higher than 36, the number range will be extended by activating case sensitive mode, where
      a to z < A to Z. If the base is higher than 62 or lower than 2, the compiler will throw an InvalidValueError.

   Scope:


Float -
   Description:
    The Float data structure is used for


String -
   Description:
    The String data structure is used for storing escaped text/binary data. If no prefix is given, the string is read as ASCII-formatted
    binary data. Escape sequences are introduced via the % char. Strings must be surrounded by either single or doublequotes. Prefixes that
    are one character long must be written in uppercase and multi-character prefixes in capitalized lowercase.

   Constructor:
    BuiltIn::string(<data>, options=<string prefixes>)

   Syntax:
     @"" -
      Converts the string into a path object. The parser will try to open the referenced file and use it as the actual value. Raises
            an ConversionError if the path is not valid or a StreamReadError if the file may not be read for any reason.

        !"" -
            Tells the parser that the string is a path that points to an absolute direction. Paths marked with this prefix are not bound to
            the directory defined with the ROOT statement. If the context doesn't allow root escaping, a RootViolation exception is thrown.

        U<version>"" -
            Indicates a unicode string. If not followed by a number, the version is automatically set to UTF-8. The Unicode version must
            be valid on the system.

        Json"" -
            Indicates a JSON file. Part of the standard library.

    Array -
        The Array data structure is used for storing multiple diffrent data structures.


Complex Structures:
*******************

    Statement -
    The Statement is a complex data structure which takes arguments and has an execution body.


Standard Operators:
*******************

    Variable Operations:
    "="  - Assignment

    Math Operations:
    "+"  - Addition
    "-"  - Subtraction
    "*"  - Multiplication
    "/"  - Division

    Boolean Operations:
    "==" - Is Equal
    "!=" - Is not Equal
    "<"  - Is Lower
    ">"  - Is Greater
    "<=" - Is Lower or Equal
    ">=" - Is Greater or Equal
    "|"  - Or
    "&"  - And

    Stream Operations:
    "<-" - Stream direction pipe (I)
    "->" - Stream direction pipe (O)

    Byte Operations:
    "<<" - Bit shift left
    ">>" - Bit shift right

    List Operations:
    ","  - Seperation